{"ast":null,"code":"import _toConsumableArray from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{ETHER}from'@uniswap/sdk';import React,{useCallback,useContext,useEffect,useMemo,useRef,useState}from'react';import ReactGA from'react-ga';import{useTranslation}from'react-i18next';import{Text}from'rebass';import{ThemeContext}from'styled-components';import{useActiveWeb3React}from'../../hooks';import{useAirLabelAllTokens,useAllTokens,useToken}from'../../hooks/Tokens';import{CloseIcon}from'../../theme';import{isAddress}from'../../utils';import Column from'../Column';import QuestionHelper from'../QuestionHelper';import{RowBetween}from'../Row';import CommonBases from'./CommonBases';import CurrencyList from'./CurrencyList';import{filterTokens}from'./filtering';import SortButton from'./SortButton';import{useTokenComparator}from'./sorting';import{PaddedColumn,SearchInput,Separator}from'./styleds';import AutoSizer from'react-virtualized-auto-sizer';import{useIsRoleProjectMode}from'../../state/user/hooks';import{useLocation}from'react-router-dom';export function CurrencySearch(_ref){var selectedCurrency=_ref.selectedCurrency,onCurrencySelect=_ref.onCurrencySelect,otherSelectedCurrency=_ref.otherSelectedCurrency,showCommonBases=_ref.showCommonBases,payInput=_ref.payInput,onDismiss=_ref.onDismiss,isOpen=_ref.isOpen,onChangeList=_ref.onChangeList;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useActiveWeb3React=useActiveWeb3React(),chainId=_useActiveWeb3React.chainId;var theme=useContext(ThemeContext);var isProjectMode=useIsRoleProjectMode();var location=useLocation();var isSwap=location.pathname==='/swap';var fixedList=useRef();var _useState=useState(''),_useState2=_slicedToArray(_useState,2),searchQuery=_useState2[0],setSearchQuery=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),invertSearchOrder=_useState4[0],setInvertSearchOrder=_useState4[1];var allTokens=useAllTokens();var airLabelAllTokens=useAirLabelAllTokens();var currentAllTokens=useMemo(function(){if(isSwap){if(isProjectMode){if(payInput){return allTokens;}else{return airLabelAllTokens;}}else{if(payInput){return airLabelAllTokens;}else{return allTokens;}}}return payInput?allTokens:airLabelAllTokens;},[allTokens,airLabelAllTokens,payInput,isProjectMode,isSwap]);// if they input an address, use it\nvar isAddressSearch=isAddress(searchQuery);var searchToken=useToken(searchQuery);useEffect(function(){if(isAddressSearch){ReactGA.event({category:'Currency Select',action:'Search by address',label:isAddressSearch});}},[isAddressSearch]);var showETH=useMemo(function(){var s=searchQuery.toLowerCase().trim();return(s===''||s==='e'||s==='et'||s==='eth')&&isProjectMode;},[searchQuery,isProjectMode]);var tokenComparator=useTokenComparator(invertSearchOrder);var filteredTokens=useMemo(function(){if(isAddressSearch)return searchToken?[searchToken]:[];return filterTokens(Object.values(currentAllTokens),searchQuery);},[isAddressSearch,searchToken,currentAllTokens,searchQuery]);var filteredSortedTokens=useMemo(function(){if(searchToken)return[searchToken];var sorted=filteredTokens.sort(tokenComparator);var symbolMatch=searchQuery.toLowerCase().split(/\\s+/).filter(function(s){return s.length>0;});if(symbolMatch.length>1)return sorted;return[].concat(_toConsumableArray(searchToken?[searchToken]:[]),_toConsumableArray(sorted.filter(function(token){var _token$symbol;return((_token$symbol=token.symbol)===null||_token$symbol===void 0?void 0:_token$symbol.toLowerCase())===symbolMatch[0];})),_toConsumableArray(sorted.filter(function(token){var _token$symbol2;return((_token$symbol2=token.symbol)===null||_token$symbol2===void 0?void 0:_token$symbol2.toLowerCase())!==symbolMatch[0];})));},[filteredTokens,searchQuery,searchToken,tokenComparator]);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);onDismiss();},[onDismiss,onCurrencySelect]);// clear the input on open\nuseEffect(function(){if(isOpen)setSearchQuery('');},[isOpen]);// manage focus on modal show\nvar inputRef=useRef();var handleInput=useCallback(function(event){var _fixedList$current;var input=event.target.value;var checksummedInput=isAddress(input);setSearchQuery(checksummedInput||input);(_fixedList$current=fixedList.current)===null||_fixedList$current===void 0?void 0:_fixedList$current.scrollTo(0);},[]);var handleEnter=useCallback(function(e){if(e.key==='Enter'){var s=searchQuery.toLowerCase().trim();if(s==='eth'){handleCurrencySelect(ETHER);}else if(filteredSortedTokens.length>0){var _filteredSortedTokens;if(((_filteredSortedTokens=filteredSortedTokens[0].symbol)===null||_filteredSortedTokens===void 0?void 0:_filteredSortedTokens.toLowerCase())===searchQuery.trim().toLowerCase()||filteredSortedTokens.length===1){handleCurrencySelect(filteredSortedTokens[0]);}}}},[filteredSortedTokens,handleCurrencySelect,searchQuery]);return/*#__PURE__*/React.createElement(Column,{style:{width:'100%',flex:'1 1'}},/*#__PURE__*/React.createElement(PaddedColumn,{gap:\"14px\"},/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontWeight:500,fontSize:16},\"Select a token\",/*#__PURE__*/React.createElement(QuestionHelper,{text:\"Find a token by searching for its name or symbol or by pasting its address below.\"})),/*#__PURE__*/React.createElement(CloseIcon,{onClick:onDismiss})),/*#__PURE__*/React.createElement(SearchInput,{type:\"text\",id:\"token-search-input\",placeholder:t('tokenSearchPlaceholder'),value:searchQuery,ref:inputRef,onChange:handleInput,onKeyDown:handleEnter}),showCommonBases&&/*#__PURE__*/React.createElement(CommonBases,{chainId:chainId,onSelect:handleCurrencySelect,selectedCurrency:selectedCurrency}),/*#__PURE__*/React.createElement(RowBetween,null,/*#__PURE__*/React.createElement(Text,{fontSize:14,fontWeight:500},\"Token Name\"),/*#__PURE__*/React.createElement(SortButton,{ascending:invertSearchOrder,toggleSortOrder:function toggleSortOrder(){return setInvertSearchOrder(function(iso){return!iso;});}}))),/*#__PURE__*/React.createElement(Separator,null),/*#__PURE__*/React.createElement(\"div\",{style:{flex:'1'}},/*#__PURE__*/React.createElement(AutoSizer,{disableWidth:true},function(_ref2){var height=_ref2.height;return/*#__PURE__*/React.createElement(CurrencyList,{height:height,showETH:showETH,currencies:filteredSortedTokens,onCurrencySelect:handleCurrencySelect,otherCurrency:otherSelectedCurrency,selectedCurrency:selectedCurrency,fixedListRef:fixedList});})));}","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/SearchModal/CurrencySearch.tsx"],"names":["ETHER","React","useCallback","useContext","useEffect","useMemo","useRef","useState","ReactGA","useTranslation","Text","ThemeContext","useActiveWeb3React","useAirLabelAllTokens","useAllTokens","useToken","CloseIcon","isAddress","Column","QuestionHelper","RowBetween","CommonBases","CurrencyList","filterTokens","SortButton","useTokenComparator","PaddedColumn","SearchInput","Separator","AutoSizer","useIsRoleProjectMode","useLocation","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","payInput","onDismiss","isOpen","onChangeList","t","chainId","theme","isProjectMode","location","isSwap","pathname","fixedList","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","allTokens","airLabelAllTokens","currentAllTokens","isAddressSearch","searchToken","event","category","action","label","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","split","filter","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","input","target","value","checksummedInput","current","scrollTo","handleEnter","e","key","width","flex","iso","height"],"mappings":"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","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAirAllTokens, useAirLabelAllTokens, useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../state/lists/hooks'\nimport { CloseIcon, LinkStyledButton, TYPE } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { useIsRoleProjectMode } from '../../state/user/hooks'\nimport { useLocation } from 'react-router-dom'\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  payInput?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  payInput,\n  onDismiss,\n  isOpen,\n  onChangeList\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const isProjectMode  = useIsRoleProjectMode()\n  const location = useLocation()\n  const isSwap = location.pathname === '/swap'\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n  const airLabelAllTokens = useAirLabelAllTokens()\n\n  const currentAllTokens = useMemo(() => {\n    if (isSwap) {\n      if (isProjectMode) {\n        if (payInput) {\n          return allTokens\n        } else {\n          return airLabelAllTokens\n        }\n      } else {\n        if (payInput) {\n          return airLabelAllTokens\n        } else {\n          return allTokens\n        }\n      }\n      \n    }\n    return payInput ? allTokens : airLabelAllTokens\n  }, [allTokens, airLabelAllTokens, payInput, isProjectMode, isSwap])\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      })\n    }\n  }, [isAddressSearch])\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return (s === '' || s === 'e' || s === 'et' || s === 'eth') && isProjectMode\n  }, [searchQuery, isProjectMode])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(currentAllTokens), searchQuery)\n  }, [isAddressSearch, searchToken, currentAllTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol?.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n  \n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            Select a token\n            <QuestionHelper text=\"Find a token by searching for its name or symbol or by pasting its address below.\" />\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <SearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize={14} fontWeight={500}>\n            Token Name\n          </Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <div style={{ flex: '1' }}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={showETH}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {/* <Separator />\n      <Card>\n        <RowBetween>\n          {selectedListInfo.current ? (\n            <Row>\n              {selectedListInfo.current.logoURI ? (\n                <ListLogo\n                  style={{ marginRight: 12 }}\n                  logoURI={selectedListInfo.current.logoURI}\n                  alt={`${selectedListInfo.current.name} list logo`}\n                />\n              ) : null}\n              <TYPE.main id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</TYPE.main>\n            </Row>\n          ) : null}\n          <LinkStyledButton\n            style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }}\n            onClick={onChangeList}\n            id=\"currency-search-change-list-button\"\n          >\n            {selectedListInfo.current ? 'Change' : 'Select a list'}\n          </LinkStyledButton>\n        </RowBetween>\n      </Card> */}\n    </Column>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}