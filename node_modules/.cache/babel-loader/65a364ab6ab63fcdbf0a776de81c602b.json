{"ast":null,"code":"import _regeneratorRuntime from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import{fetcher,poster}from\"../../utils/axios\";export var getUserNonce=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(account){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetcher(\"/api/user/nonce/\".concat(account));case 2:res=_context.sent;return _context.abrupt(\"return\",res);case 4:case\"end\":return _context.stop();}}},_callee);}));return function getUserNonce(_x){return _ref.apply(this,arguments);};}();export var airdropV2=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(account,sign,totalAmount,tokenAddress,type){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return poster(\"/api/airdrop/airdropV2\",{account:account,sign:sign,totalAmount:totalAmount,tokenAddress:tokenAddress});case 2:res=_context2.sent;return _context2.abrupt(\"return\",res);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function airdropV2(_x2,_x3,_x4,_x5,_x6){return _ref2.apply(this,arguments);};}();export var airdropV2Swap=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(account,sign,addressList,amountList,algTokenAddress,airTokenAddress){var res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return poster(\"/api/airdrop/airdropV2Swap\",{account:account,sign:sign,addressList:addressList,amountList:amountList,algTokenAddress:algTokenAddress,airTokenAddress:airTokenAddress});case 2:res=_context3.sent;return _context3.abrupt(\"return\",res);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function airdropV2Swap(_x7,_x8,_x9,_x10,_x11,_x12){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/state/user/api.ts"],"names":["fetcher","poster","getUserNonce","account","res","airdropV2","sign","totalAmount","tokenAddress","type","airdropV2Swap","addressList","amountList","algTokenAddress","airTokenAddress"],"mappings":"iXAAA,OAASA,OAAT,CAAkBC,MAAlB,KAAgC,mBAAhC,CAEA,MAAO,IAAMC,CAAAA,YAAY,0FAAG,iBAAOC,OAAP,gJACRH,CAAAA,OAAO,2BAAoBG,OAApB,EADC,QACpBC,GADoB,+CAGnBA,GAHmB,wDAAH,kBAAZF,CAAAA,YAAY,4CAAlB,CAMP,MAAO,IAAMG,CAAAA,SAAS,2FAAG,kBAAOF,OAAP,CAAwBG,IAAxB,CAAsCC,WAAtC,CAA2DC,YAA3D,CAAkFC,IAAlF,qJAELR,CAAAA,MAAM,0BAA2B,CAAEE,OAAO,CAAPA,OAAF,CAAWG,IAAI,CAAJA,IAAX,CAAiBC,WAAW,CAAXA,WAAjB,CAA8BC,YAAY,CAAZA,YAA9B,CAA3B,CAFD,QAEjBJ,GAFiB,iDAIhBA,GAJgB,0DAAH,kBAATC,CAAAA,SAAS,8DAAf,CAOP,MAAO,IAAMK,CAAAA,aAAa,2FAAG,kBAC3BP,OAD2B,CAE3BG,IAF2B,CAG3BK,WAH2B,CAI3BC,UAJ2B,CAK3BC,eAL2B,CAM3BC,eAN2B,qJASTb,CAAAA,MAAM,8BAA+B,CAAEE,OAAO,CAAPA,OAAF,CAAWG,IAAI,CAAJA,IAAX,CAAiBK,WAAW,CAAXA,WAAjB,CAA8BC,UAAU,CAAVA,UAA9B,CAA0CC,eAAe,CAAfA,eAA1C,CAA2DC,eAAe,CAAfA,eAA3D,CAA/B,CATG,QASrBV,GATqB,iDAWpBA,GAXoB,0DAAH,kBAAbM,CAAAA,aAAa,qEAAnB","sourcesContent":["import { fetcher, poster } from \"../../utils/axios\"\n\nexport const getUserNonce = async (account: string) => {\n  const res = await fetcher(`/api/user/nonce/${account}`)\n\n  return res\n}\n\nexport const airdropV2 = async (account: string, sign: string, totalAmount: string, tokenAddress?: string, type?: number) => {\n  \n  const res = await poster(`/api/airdrop/airdropV2`, { account, sign, totalAmount, tokenAddress })\n\n  return res\n}\n\nexport const airdropV2Swap = async (\n  account: string, \n  sign: string, \n  addressList: string[], \n  amountList: string[], \n  algTokenAddress?: string, \n  airTokenAddress?: string\n) => {\n  \n  const res = await poster(`/api/airdrop/airdropV2Swap`, { account, sign, addressList, amountList, algTokenAddress, airTokenAddress })\n\n  return res\n}"]},"metadata":{},"sourceType":"module"}