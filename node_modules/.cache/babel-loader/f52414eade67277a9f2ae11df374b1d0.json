{"ast":null,"code":"import _slicedToArray from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useEffect,useState}from'react';import ReactGA from'react-ga';import useLast from'../../hooks/useLast';import{useSelectedListUrl}from'../../state/lists/hooks';import Modal from'../Modal';import{CurrencySearch}from'./CurrencySearch';export default function CurrencySearchModal(_ref){var isOpen=_ref.isOpen,onDismiss=_ref.onDismiss,onCurrencySelect=_ref.onCurrencySelect,selectedCurrency=_ref.selectedCurrency,otherSelectedCurrency=_ref.otherSelectedCurrency,_ref$showCommonBases=_ref.showCommonBases,showCommonBases=_ref$showCommonBases===void 0?false:_ref$showCommonBases,_ref$payInput=_ref.payInput,payInput=_ref$payInput===void 0?true:_ref$payInput;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),listView=_useState2[0],setListView=_useState2[1];var lastOpen=useLast(isOpen);useEffect(function(){if(isOpen&&!lastOpen){setListView(false);}},[isOpen,lastOpen]);var handleCurrencySelect=useCallback(function(currency){onCurrencySelect(currency);onDismiss();},[onDismiss,onCurrencySelect]);var handleClickChangeList=useCallback(function(){ReactGA.event({category:'Lists',action:'Change Lists'});setListView(true);},[]);var handleClickBack=useCallback(function(){ReactGA.event({category:'Lists',action:'Back'});setListView(false);},[]);var handleSelectListIntroduction=useCallback(function(){setListView(true);},[]);var selectedListUrl=useSelectedListUrl();var noListSelected=!selectedListUrl;return/*#__PURE__*/React.createElement(Modal,{isOpen:isOpen,onDismiss:onDismiss,maxHeight:90,minHeight:listView?40:noListSelected?0:80},/*#__PURE__*/React.createElement(CurrencySearch,{isOpen:isOpen,onDismiss:onDismiss,onCurrencySelect:handleCurrencySelect,onChangeList:handleClickChangeList,selectedCurrency:selectedCurrency,otherSelectedCurrency:otherSelectedCurrency,showCommonBases:showCommonBases,payInput:payInput}));}","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/SearchModal/CurrencySearchModal.tsx"],"names":["React","useCallback","useEffect","useState","ReactGA","useLast","useSelectedListUrl","Modal","CurrencySearch","CurrencySearchModal","isOpen","onDismiss","onCurrencySelect","selectedCurrency","otherSelectedCurrency","showCommonBases","payInput","listView","setListView","lastOpen","handleCurrencySelect","currency","handleClickChangeList","event","category","action","handleClickBack","handleSelectListIntroduction","selectedListUrl","noListSelected"],"mappings":"0LACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,SAA7B,CAAwCC,QAAxC,KAAwD,OAAxD,CACA,MAAOC,CAAAA,OAAP,KAAoB,UAApB,CACA,MAAOC,CAAAA,OAAP,KAAoB,qBAApB,CACA,OAASC,kBAAT,KAAmC,yBAAnC,CACA,MAAOC,CAAAA,KAAP,KAAkB,UAAlB,CACA,OAASC,cAAT,KAA+B,kBAA/B,CAcA,cAAe,SAASC,CAAAA,mBAAT,MAQc,IAP3BC,CAAAA,MAO2B,MAP3BA,MAO2B,CAN3BC,SAM2B,MAN3BA,SAM2B,CAL3BC,gBAK2B,MAL3BA,gBAK2B,CAJ3BC,gBAI2B,MAJ3BA,gBAI2B,CAH3BC,qBAG2B,MAH3BA,qBAG2B,2BAF3BC,eAE2B,CAF3BA,eAE2B,+BAFT,KAES,yCAD3BC,QAC2B,CAD3BA,QAC2B,wBADhB,IACgB,6BACKb,QAAQ,CAAU,KAAV,CADb,wCACpBc,QADoB,eACVC,WADU,eAE3B,GAAMC,CAAAA,QAAQ,CAAGd,OAAO,CAACK,MAAD,CAAxB,CAEAR,SAAS,CAAC,UAAM,CACd,GAAIQ,MAAM,EAAI,CAACS,QAAf,CAAyB,CACvBD,WAAW,CAAC,KAAD,CAAX,CACD,CACF,CAJQ,CAIN,CAACR,MAAD,CAASS,QAAT,CAJM,CAAT,CAMA,GAAMC,CAAAA,oBAAoB,CAAGnB,WAAW,CACtC,SAACoB,QAAD,CAAwB,CACtBT,gBAAgB,CAACS,QAAD,CAAhB,CACAV,SAAS,GACV,CAJqC,CAKtC,CAACA,SAAD,CAAYC,gBAAZ,CALsC,CAAxC,CAQA,GAAMU,CAAAA,qBAAqB,CAAGrB,WAAW,CAAC,UAAM,CAC9CG,OAAO,CAACmB,KAAR,CAAc,CACZC,QAAQ,CAAE,OADE,CAEZC,MAAM,CAAE,cAFI,CAAd,EAIAP,WAAW,CAAC,IAAD,CAAX,CACD,CANwC,CAMtC,EANsC,CAAzC,CAOA,GAAMQ,CAAAA,eAAe,CAAGzB,WAAW,CAAC,UAAM,CACxCG,OAAO,CAACmB,KAAR,CAAc,CACZC,QAAQ,CAAE,OADE,CAEZC,MAAM,CAAE,MAFI,CAAd,EAIAP,WAAW,CAAC,KAAD,CAAX,CACD,CANkC,CAMhC,EANgC,CAAnC,CAOA,GAAMS,CAAAA,4BAA4B,CAAG1B,WAAW,CAAC,UAAM,CACrDiB,WAAW,CAAC,IAAD,CAAX,CACD,CAF+C,CAE7C,EAF6C,CAAhD,CAIA,GAAMU,CAAAA,eAAe,CAAGtB,kBAAkB,EAA1C,CACA,GAAMuB,CAAAA,cAAc,CAAG,CAACD,eAAxB,CAEA,mBACE,oBAAC,KAAD,EAAO,MAAM,CAAElB,MAAf,CAAuB,SAAS,CAAEC,SAAlC,CAA6C,SAAS,CAAE,EAAxD,CAA4D,SAAS,CAAEM,QAAQ,CAAG,EAAH,CAAQY,cAAc,CAAG,CAAH,CAAO,EAA5G,eACI,oBAAC,cAAD,EACE,MAAM,CAAEnB,MADV,CAEE,SAAS,CAAEC,SAFb,CAGE,gBAAgB,CAAES,oBAHpB,CAIE,YAAY,CAAEE,qBAJhB,CAKE,gBAAgB,CAAET,gBALpB,CAME,qBAAqB,CAAEC,qBANzB,CAOE,eAAe,CAAEC,eAPnB,CAQE,QAAQ,CAAEC,QARZ,EADJ,CADF,CAcD","sourcesContent":["import { Currency } from '@uniswap/sdk'\nimport React, { useCallback, useEffect, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport useLast from '../../hooks/useLast'\nimport { useSelectedListUrl } from '../../state/lists/hooks'\nimport Modal from '../Modal'\nimport { CurrencySearch } from './CurrencySearch'\nimport ListIntroduction from './ListIntroduction'\nimport { ListSelect } from './ListSelect'\n\ninterface CurrencySearchModalProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  payInput?: boolean\n}\n\nexport default function CurrencySearchModal({\n  isOpen,\n  onDismiss,\n  onCurrencySelect,\n  selectedCurrency,\n  otherSelectedCurrency,\n  showCommonBases = false,\n  payInput = true\n}: CurrencySearchModalProps) {\n  const [listView, setListView] = useState<boolean>(false)\n  const lastOpen = useLast(isOpen)\n\n  useEffect(() => {\n    if (isOpen && !lastOpen) {\n      setListView(false)\n    }\n  }, [isOpen, lastOpen])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  const handleClickChangeList = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Change Lists'\n    })\n    setListView(true)\n  }, [])\n  const handleClickBack = useCallback(() => {\n    ReactGA.event({\n      category: 'Lists',\n      action: 'Back'\n    })\n    setListView(false)\n  }, [])\n  const handleSelectListIntroduction = useCallback(() => {\n    setListView(true)\n  }, [])\n\n  const selectedListUrl = useSelectedListUrl()\n  const noListSelected = !selectedListUrl\n\n  return (\n    <Modal isOpen={isOpen} onDismiss={onDismiss} maxHeight={90} minHeight={listView ? 40 : noListSelected ? 0 : 80}>\n        <CurrencySearch\n          isOpen={isOpen}\n          onDismiss={onDismiss}\n          onCurrencySelect={handleCurrencySelect}\n          onChangeList={handleClickChangeList}\n          selectedCurrency={selectedCurrency}\n          otherSelectedCurrency={otherSelectedCurrency}\n          showCommonBases={showCommonBases}\n          payInput={payInput}\n        />\n    </Modal>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}