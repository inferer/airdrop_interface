{"ast":null,"code":"import{INITIAL_ALLOWED_SLIPPAGE,DEFAULT_DEADLINE_FROM_NOW,UserRoleMode}from'../../constants';import{createReducer}from'@reduxjs/toolkit';import{updateVersion}from'../global/actions';import{addSerializedPair,addSerializedToken,removeSerializedPair,removeSerializedToken,updateMatchesDarkMode,updateUserDarkMode,updateUserExpertMode,updateUserSlippageTolerance,updateUserDeadline,updateUserRoleMode}from'./actions';var currentTimestamp=function currentTimestamp(){return new Date().getTime();};function pairKey(token0Address,token1Address){return\"\".concat(token0Address,\";\").concat(token1Address);}export var initialState={userDarkMode:null,matchesDarkMode:false,userExpertMode:false,userSlippageTolerance:INITIAL_ALLOWED_SLIPPAGE,userDeadline:DEFAULT_DEADLINE_FROM_NOW,tokens:{},pairs:{},timestamp:currentTimestamp(),userRoleMode:UserRoleMode.PROJECT};export default createReducer(initialState,function(builder){return builder.addCase(updateUserRoleMode,function(state,action){state.userRoleMode=action.payload.userRoleMode;}).addCase(updateVersion,function(state){// slippage isnt being tracked in local storage, reset to default\n// noinspection SuspiciousTypeOfGuard\nif(typeof state.userSlippageTolerance!=='number'){state.userSlippageTolerance=INITIAL_ALLOWED_SLIPPAGE;}// deadline isnt being tracked in local storage, reset to default\n// noinspection SuspiciousTypeOfGuard\nif(typeof state.userDeadline!=='number'){state.userDeadline=DEFAULT_DEADLINE_FROM_NOW;}state.lastUpdateVersionTimestamp=currentTimestamp();}).addCase(updateUserDarkMode,function(state,action){state.userDarkMode=action.payload.userDarkMode;state.timestamp=currentTimestamp();}).addCase(updateMatchesDarkMode,function(state,action){state.matchesDarkMode=action.payload.matchesDarkMode;state.timestamp=currentTimestamp();}).addCase(updateUserExpertMode,function(state,action){state.userExpertMode=action.payload.userExpertMode;state.timestamp=currentTimestamp();}).addCase(updateUserSlippageTolerance,function(state,action){state.userSlippageTolerance=action.payload.userSlippageTolerance;state.timestamp=currentTimestamp();}).addCase(updateUserDeadline,function(state,action){state.userDeadline=action.payload.userDeadline;state.timestamp=currentTimestamp();}).addCase(addSerializedToken,function(state,_ref){var serializedToken=_ref.payload.serializedToken;state.tokens[serializedToken.chainId]=state.tokens[serializedToken.chainId]||{};state.tokens[serializedToken.chainId][serializedToken.address]=serializedToken;state.timestamp=currentTimestamp();}).addCase(removeSerializedToken,function(state,_ref2){var _ref2$payload=_ref2.payload,address=_ref2$payload.address,chainId=_ref2$payload.chainId;state.tokens[chainId]=state.tokens[chainId]||{};delete state.tokens[chainId][address];state.timestamp=currentTimestamp();}).addCase(addSerializedPair,function(state,_ref3){var serializedPair=_ref3.payload.serializedPair;if(serializedPair.token0.chainId===serializedPair.token1.chainId&&serializedPair.token0.address!==serializedPair.token1.address){var _chainId=serializedPair.token0.chainId;state.pairs[_chainId]=state.pairs[_chainId]||{};state.pairs[_chainId][pairKey(serializedPair.token0.address,serializedPair.token1.address)]=serializedPair;}state.timestamp=currentTimestamp();}).addCase(removeSerializedPair,function(state,_ref4){var _ref4$payload=_ref4.payload,chainId=_ref4$payload.chainId,tokenAAddress=_ref4$payload.tokenAAddress,tokenBAddress=_ref4$payload.tokenBAddress;if(state.pairs[chainId]){// just delete both keys if either exists\ndelete state.pairs[chainId][pairKey(tokenAAddress,tokenBAddress)];delete state.pairs[chainId][pairKey(tokenBAddress,tokenAAddress)];}state.timestamp=currentTimestamp();});});","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/state/user/reducer.ts"],"names":["INITIAL_ALLOWED_SLIPPAGE","DEFAULT_DEADLINE_FROM_NOW","UserRoleMode","createReducer","updateVersion","addSerializedPair","addSerializedToken","removeSerializedPair","removeSerializedToken","updateMatchesDarkMode","updateUserDarkMode","updateUserExpertMode","updateUserSlippageTolerance","updateUserDeadline","updateUserRoleMode","currentTimestamp","Date","getTime","pairKey","token0Address","token1Address","initialState","userDarkMode","matchesDarkMode","userExpertMode","userSlippageTolerance","userDeadline","tokens","pairs","timestamp","userRoleMode","PROJECT","builder","addCase","state","action","payload","lastUpdateVersionTimestamp","serializedToken","chainId","address","serializedPair","token0","token1","tokenAAddress","tokenBAddress"],"mappings":"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","sourcesContent":["import { INITIAL_ALLOWED_SLIPPAGE, DEFAULT_DEADLINE_FROM_NOW, UserRoleMode } from '../../constants'\nimport { createReducer } from '@reduxjs/toolkit'\nimport { updateVersion } from '../global/actions'\nimport {\n  addSerializedPair,\n  addSerializedToken,\n  removeSerializedPair,\n  removeSerializedToken,\n  SerializedPair,\n  SerializedToken,\n  updateMatchesDarkMode,\n  updateUserDarkMode,\n  updateUserExpertMode,\n  updateUserSlippageTolerance,\n  updateUserDeadline,\n  updateUserRoleMode\n} from './actions'\n\nconst currentTimestamp = () => new Date().getTime()\n\nexport interface UserState {\n  // the timestamp of the last updateVersion action\n  lastUpdateVersionTimestamp?: number\n\n  userDarkMode: boolean | null // the user's choice for dark mode or light mode\n  matchesDarkMode: boolean // whether the dark mode media query matches\n\n  userExpertMode: boolean\n\n  // user defined slippage tolerance in bips, used in all txns\n  userSlippageTolerance: number\n\n  // deadline set by user in minutes, used in all txns\n  userDeadline: number\n\n  tokens: {\n    [chainId: number]: {\n      [address: string]: SerializedToken\n    }\n  }\n\n  pairs: {\n    [chainId: number]: {\n      // keyed by token0Address:token1Address\n      [key: string]: SerializedPair\n    }\n  }\n\n  timestamp: number\n\n  userRoleMode: UserRoleMode\n}\n\nfunction pairKey(token0Address: string, token1Address: string) {\n  return `${token0Address};${token1Address}`\n}\n\nexport const initialState: UserState = {\n  userDarkMode: null,\n  matchesDarkMode: false,\n  userExpertMode: false,\n  userSlippageTolerance: INITIAL_ALLOWED_SLIPPAGE,\n  userDeadline: DEFAULT_DEADLINE_FROM_NOW,\n  tokens: {},\n  pairs: {},\n  timestamp: currentTimestamp(),\n  userRoleMode: UserRoleMode.PROJECT\n}\n\nexport default createReducer(initialState, builder =>\n  builder\n    .addCase(updateUserRoleMode, (state, action) => {\n      state.userRoleMode = action.payload.userRoleMode\n    })\n    .addCase(updateVersion, state => {\n      // slippage isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userSlippageTolerance !== 'number') {\n        state.userSlippageTolerance = INITIAL_ALLOWED_SLIPPAGE\n      }\n\n      // deadline isnt being tracked in local storage, reset to default\n      // noinspection SuspiciousTypeOfGuard\n      if (typeof state.userDeadline !== 'number') {\n        state.userDeadline = DEFAULT_DEADLINE_FROM_NOW\n      }\n\n      state.lastUpdateVersionTimestamp = currentTimestamp()\n    })\n    .addCase(updateUserDarkMode, (state, action) => {\n      state.userDarkMode = action.payload.userDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateMatchesDarkMode, (state, action) => {\n      state.matchesDarkMode = action.payload.matchesDarkMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserExpertMode, (state, action) => {\n      state.userExpertMode = action.payload.userExpertMode\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserSlippageTolerance, (state, action) => {\n      state.userSlippageTolerance = action.payload.userSlippageTolerance\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(updateUserDeadline, (state, action) => {\n      state.userDeadline = action.payload.userDeadline\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedToken, (state, { payload: { serializedToken } }) => {\n      state.tokens[serializedToken.chainId] = state.tokens[serializedToken.chainId] || {}\n      state.tokens[serializedToken.chainId][serializedToken.address] = serializedToken\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedToken, (state, { payload: { address, chainId } }) => {\n      state.tokens[chainId] = state.tokens[chainId] || {}\n      delete state.tokens[chainId][address]\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(addSerializedPair, (state, { payload: { serializedPair } }) => {\n      if (\n        serializedPair.token0.chainId === serializedPair.token1.chainId &&\n        serializedPair.token0.address !== serializedPair.token1.address\n      ) {\n        const chainId = serializedPair.token0.chainId\n        state.pairs[chainId] = state.pairs[chainId] || {}\n        state.pairs[chainId][pairKey(serializedPair.token0.address, serializedPair.token1.address)] = serializedPair\n      }\n      state.timestamp = currentTimestamp()\n    })\n    .addCase(removeSerializedPair, (state, { payload: { chainId, tokenAAddress, tokenBAddress } }) => {\n      if (state.pairs[chainId]) {\n        // just delete both keys if either exists\n        delete state.pairs[chainId][pairKey(tokenAAddress, tokenBAddress)]\n        delete state.pairs[chainId][pairKey(tokenBAddress, tokenAAddress)]\n      }\n      state.timestamp = currentTimestamp()\n    })\n)\n"]},"metadata":{},"sourceType":"module"}