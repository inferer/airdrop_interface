{"ast":null,"code":"var _jsxFileName = \"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/SearchModal/CurrencySearch.tsx\";\nimport { ETHER } from '@uniswap/sdk';\nimport React, { useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react';\nimport ReactGA from 'react-ga';\nimport { useTranslation } from 'react-i18next';\nimport { Text } from 'rebass';\nimport { ThemeContext } from 'styled-components';\nimport { useActiveWeb3React } from '../../hooks';\nimport { useAirAllTokens, useAllTokens, useToken } from '../../hooks/Tokens';\nimport { useSelectedListInfo } from '../../state/lists/hooks';\nimport { CloseIcon } from '../../theme';\nimport { isAddress } from '../../utils';\nimport Column from '../Column';\nimport QuestionHelper from '../QuestionHelper';\nimport { RowBetween } from '../Row';\nimport CommonBases from './CommonBases';\nimport CurrencyList from './CurrencyList';\nimport { filterTokens } from './filtering';\nimport SortButton from './SortButton';\nimport { useTokenComparator } from './sorting';\nimport { PaddedColumn, SearchInput, Separator } from './styleds';\nimport AutoSizer from 'react-virtualized-auto-sizer';\nimport { useIsRoleProjectMode } from '../../state/user/hooks';\nimport { useLocation } from 'react-router-dom';\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  payInput,\n  onDismiss,\n  isOpen,\n  onChangeList\n}) {\n  const {\n    t\n  } = useTranslation();\n  const {\n    chainId\n  } = useActiveWeb3React();\n  const theme = useContext(ThemeContext);\n  const isProjectMode = useIsRoleProjectMode();\n  const location = useLocation();\n  const isSwap = location.pathname === '/swap';\n  const fixedList = useRef();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [invertSearchOrder, setInvertSearchOrder] = useState(false);\n  const allTokens = useAllTokens();\n  const airAllTokens = useAirAllTokens();\n  const currentAllTokens = useMemo(() => {\n    if (isSwap) {\n      if (payInput && isProjectMode) {\n        return allTokens;\n      }\n\n      return airAllTokens;\n    }\n\n    return payInput ? allTokens : airAllTokens;\n  }, [allTokens, airAllTokens, payInput, isProjectMode, isSwap]); // if they input an address, use it\n\n  const isAddressSearch = isAddress(searchQuery);\n  const searchToken = useToken(searchQuery);\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      });\n    }\n  }, [isAddressSearch]);\n  const showETH = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim();\n    return s === '' || s === 'e' || s === 'et' || s === 'eth';\n  }, [searchQuery]);\n  const tokenComparator = useTokenComparator(invertSearchOrder);\n  const filteredTokens = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : [];\n    return filterTokens(Object.values(currentAllTokens), searchQuery);\n  }, [isAddressSearch, searchToken, currentAllTokens, searchQuery]);\n  const filteredSortedTokens = useMemo(() => {\n    if (searchToken) return [searchToken];\n    const sorted = filteredTokens.sort(tokenComparator);\n    const symbolMatch = searchQuery.toLowerCase().split(/\\s+/).filter(s => s.length > 0);\n    if (symbolMatch.length > 1) return sorted;\n    return [...(searchToken ? [searchToken] : []), // sort any exact symbol matches first\n    ...sorted.filter(token => {\n      var _token$symbol;\n\n      return ((_token$symbol = token.symbol) === null || _token$symbol === void 0 ? void 0 : _token$symbol.toLowerCase()) === symbolMatch[0];\n    }), ...sorted.filter(token => {\n      var _token$symbol2;\n\n      return ((_token$symbol2 = token.symbol) === null || _token$symbol2 === void 0 ? void 0 : _token$symbol2.toLowerCase()) !== symbolMatch[0];\n    })];\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator]);\n  const handleCurrencySelect = useCallback(currency => {\n    onCurrencySelect(currency);\n    onDismiss();\n  }, [onDismiss, onCurrencySelect]); // clear the input on open\n\n  useEffect(() => {\n    if (isOpen) setSearchQuery('');\n  }, [isOpen]); // manage focus on modal show\n\n  const inputRef = useRef();\n  const handleInput = useCallback(event => {\n    var _fixedList$current;\n\n    const input = event.target.value;\n    const checksummedInput = isAddress(input);\n    setSearchQuery(checksummedInput || input);\n    (_fixedList$current = fixedList.current) === null || _fixedList$current === void 0 ? void 0 : _fixedList$current.scrollTo(0);\n  }, []);\n  const handleEnter = useCallback(e => {\n    if (e.key === 'Enter') {\n      const s = searchQuery.toLowerCase().trim();\n\n      if (s === 'eth') {\n        handleCurrencySelect(ETHER);\n      } else if (filteredSortedTokens.length > 0) {\n        var _filteredSortedTokens;\n\n        if (((_filteredSortedTokens = filteredSortedTokens[0].symbol) === null || _filteredSortedTokens === void 0 ? void 0 : _filteredSortedTokens.toLowerCase()) === searchQuery.trim().toLowerCase() || filteredSortedTokens.length === 1) {\n          handleCurrencySelect(filteredSortedTokens[0]);\n        }\n      }\n    }\n  }, [filteredSortedTokens, handleCurrencySelect, searchQuery]);\n  const selectedListInfo = useSelectedListInfo();\n  return /*#__PURE__*/React.createElement(Column, {\n    style: {\n      width: '100%',\n      flex: '1 1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaddedColumn, {\n    gap: \"14px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontWeight: 500,\n    fontSize: 16,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 11\n    }\n  }, \"Select a token\", /*#__PURE__*/React.createElement(QuestionHelper, {\n    text: \"Find a token by searching for its name or symbol or by pasting its address below.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(CloseIcon, {\n    onClick: onDismiss,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(SearchInput, {\n    type: \"text\",\n    id: \"token-search-input\",\n    placeholder: t('tokenSearchPlaceholder'),\n    value: searchQuery,\n    ref: inputRef,\n    onChange: handleInput,\n    onKeyDown: handleEnter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), showCommonBases && /*#__PURE__*/React.createElement(CommonBases, {\n    chainId: chainId,\n    onSelect: handleCurrencySelect,\n    selectedCurrency: selectedCurrency,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(RowBetween, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Text, {\n    fontSize: 14,\n    fontWeight: 500,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  }, \"Token Name\"), /*#__PURE__*/React.createElement(SortButton, {\n    ascending: invertSearchOrder,\n    toggleSortOrder: () => setInvertSearchOrder(iso => !iso),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(Separator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      flex: '1'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AutoSizer, {\n    disableWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }\n  }, ({\n    height\n  }) => /*#__PURE__*/React.createElement(CurrencyList, {\n    height: height,\n    showETH: !!payInput,\n    currencies: filteredSortedTokens,\n    onCurrencySelect: handleCurrencySelect,\n    otherCurrency: otherSelectedCurrency,\n    selectedCurrency: selectedCurrency,\n    fixedListRef: fixedList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 13\n    }\n  }))));\n}","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/SearchModal/CurrencySearch.tsx"],"names":["ETHER","React","useCallback","useContext","useEffect","useMemo","useRef","useState","ReactGA","useTranslation","Text","ThemeContext","useActiveWeb3React","useAirAllTokens","useAllTokens","useToken","useSelectedListInfo","CloseIcon","isAddress","Column","QuestionHelper","RowBetween","CommonBases","CurrencyList","filterTokens","SortButton","useTokenComparator","PaddedColumn","SearchInput","Separator","AutoSizer","useIsRoleProjectMode","useLocation","CurrencySearch","selectedCurrency","onCurrencySelect","otherSelectedCurrency","showCommonBases","payInput","onDismiss","isOpen","onChangeList","t","chainId","theme","isProjectMode","location","isSwap","pathname","fixedList","searchQuery","setSearchQuery","invertSearchOrder","setInvertSearchOrder","allTokens","airAllTokens","currentAllTokens","isAddressSearch","searchToken","event","category","action","label","showETH","s","toLowerCase","trim","tokenComparator","filteredTokens","Object","values","filteredSortedTokens","sorted","sort","symbolMatch","split","filter","length","token","symbol","handleCurrencySelect","currency","inputRef","handleInput","input","target","value","checksummedInput","current","scrollTo","handleEnter","e","key","selectedListInfo","width","flex","iso","height"],"mappings":"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","sourcesContent":["import { Currency, ETHER, Token } from '@uniswap/sdk'\nimport React, { KeyboardEvent, RefObject, useCallback, useContext, useEffect, useMemo, useRef, useState } from 'react'\nimport ReactGA from 'react-ga'\nimport { useTranslation } from 'react-i18next'\nimport { FixedSizeList } from 'react-window'\nimport { Text } from 'rebass'\nimport { ThemeContext } from 'styled-components'\nimport { useActiveWeb3React } from '../../hooks'\nimport { useAirAllTokens, useAllTokens, useToken } from '../../hooks/Tokens'\nimport { useSelectedListInfo } from '../../state/lists/hooks'\nimport { CloseIcon, LinkStyledButton, TYPE } from '../../theme'\nimport { isAddress } from '../../utils'\nimport Card from '../Card'\nimport Column from '../Column'\nimport ListLogo from '../ListLogo'\nimport QuestionHelper from '../QuestionHelper'\nimport Row, { RowBetween } from '../Row'\nimport CommonBases from './CommonBases'\nimport CurrencyList from './CurrencyList'\nimport { filterTokens } from './filtering'\nimport SortButton from './SortButton'\nimport { useTokenComparator } from './sorting'\nimport { PaddedColumn, SearchInput, Separator } from './styleds'\nimport AutoSizer from 'react-virtualized-auto-sizer'\nimport { useIsRoleProjectMode } from '../../state/user/hooks'\nimport { useLocation } from 'react-router-dom'\n\ninterface CurrencySearchProps {\n  isOpen: boolean\n  onDismiss: () => void\n  selectedCurrency?: Currency | null\n  onCurrencySelect: (currency: Currency) => void\n  otherSelectedCurrency?: Currency | null\n  showCommonBases?: boolean\n  payInput?: boolean\n  onChangeList: () => void\n}\n\nexport function CurrencySearch({\n  selectedCurrency,\n  onCurrencySelect,\n  otherSelectedCurrency,\n  showCommonBases,\n  payInput,\n  onDismiss,\n  isOpen,\n  onChangeList\n}: CurrencySearchProps) {\n  const { t } = useTranslation()\n  const { chainId } = useActiveWeb3React()\n  const theme = useContext(ThemeContext)\n\n  const isProjectMode  = useIsRoleProjectMode()\n  const location = useLocation()\n  const isSwap = location.pathname === '/swap'\n\n  const fixedList = useRef<FixedSizeList>()\n  const [searchQuery, setSearchQuery] = useState<string>('')\n  const [invertSearchOrder, setInvertSearchOrder] = useState<boolean>(false)\n  const allTokens = useAllTokens()\n  const airAllTokens = useAirAllTokens()\n\n  const currentAllTokens = useMemo(() => {\n    if (isSwap) {\n      if (payInput && isProjectMode) {\n        return allTokens\n      }\n      return airAllTokens\n    }\n    return payInput ? allTokens : airAllTokens\n  }, [allTokens, airAllTokens, payInput, isProjectMode, isSwap])\n\n  // if they input an address, use it\n  const isAddressSearch = isAddress(searchQuery)\n  const searchToken = useToken(searchQuery)\n\n  useEffect(() => {\n    if (isAddressSearch) {\n      ReactGA.event({\n        category: 'Currency Select',\n        action: 'Search by address',\n        label: isAddressSearch\n      })\n    }\n  }, [isAddressSearch])\n\n  const showETH: boolean = useMemo(() => {\n    const s = searchQuery.toLowerCase().trim()\n    return s === '' || s === 'e' || s === 'et' || s === 'eth'\n  }, [searchQuery])\n\n  const tokenComparator = useTokenComparator(invertSearchOrder)\n\n  const filteredTokens: Token[] = useMemo(() => {\n    if (isAddressSearch) return searchToken ? [searchToken] : []\n    return filterTokens(Object.values(currentAllTokens), searchQuery)\n  }, [isAddressSearch, searchToken, currentAllTokens, searchQuery])\n\n  const filteredSortedTokens: Token[] = useMemo(() => {\n    if (searchToken) return [searchToken]\n    const sorted = filteredTokens.sort(tokenComparator)\n    const symbolMatch = searchQuery\n      .toLowerCase()\n      .split(/\\s+/)\n      .filter(s => s.length > 0)\n    if (symbolMatch.length > 1) return sorted\n\n    return [\n      ...(searchToken ? [searchToken] : []),\n      // sort any exact symbol matches first\n      ...sorted.filter(token => token.symbol?.toLowerCase() === symbolMatch[0]),\n      ...sorted.filter(token => token.symbol?.toLowerCase() !== symbolMatch[0])\n    ]\n  }, [filteredTokens, searchQuery, searchToken, tokenComparator])\n\n  const handleCurrencySelect = useCallback(\n    (currency: Currency) => {\n      onCurrencySelect(currency)\n      onDismiss()\n    },\n    [onDismiss, onCurrencySelect]\n  )\n\n  // clear the input on open\n  useEffect(() => {\n    if (isOpen) setSearchQuery('')\n  }, [isOpen])\n\n  // manage focus on modal show\n  const inputRef = useRef<HTMLInputElement>()\n  const handleInput = useCallback(event => {\n    const input = event.target.value\n    const checksummedInput = isAddress(input)\n    setSearchQuery(checksummedInput || input)\n    fixedList.current?.scrollTo(0)\n  }, [])\n\n  const handleEnter = useCallback(\n    (e: KeyboardEvent<HTMLInputElement>) => {\n      if (e.key === 'Enter') {\n        const s = searchQuery.toLowerCase().trim()\n        if (s === 'eth') {\n          handleCurrencySelect(ETHER)\n        } else if (filteredSortedTokens.length > 0) {\n          if (\n            filteredSortedTokens[0].symbol?.toLowerCase() === searchQuery.trim().toLowerCase() ||\n            filteredSortedTokens.length === 1\n          ) {\n            handleCurrencySelect(filteredSortedTokens[0])\n          }\n        }\n      }\n    },\n    [filteredSortedTokens, handleCurrencySelect, searchQuery]\n  )\n\n  const selectedListInfo = useSelectedListInfo()\n\n  return (\n    <Column style={{ width: '100%', flex: '1 1' }}>\n      <PaddedColumn gap=\"14px\">\n        <RowBetween>\n          <Text fontWeight={500} fontSize={16}>\n            Select a token\n            <QuestionHelper text=\"Find a token by searching for its name or symbol or by pasting its address below.\" />\n          </Text>\n          <CloseIcon onClick={onDismiss} />\n        </RowBetween>\n        <SearchInput\n          type=\"text\"\n          id=\"token-search-input\"\n          placeholder={t('tokenSearchPlaceholder')}\n          value={searchQuery}\n          ref={inputRef as RefObject<HTMLInputElement>}\n          onChange={handleInput}\n          onKeyDown={handleEnter}\n        />\n        {showCommonBases && (\n          <CommonBases chainId={chainId} onSelect={handleCurrencySelect} selectedCurrency={selectedCurrency} />\n        )}\n        <RowBetween>\n          <Text fontSize={14} fontWeight={500}>\n            Token Name\n          </Text>\n          <SortButton ascending={invertSearchOrder} toggleSortOrder={() => setInvertSearchOrder(iso => !iso)} />\n        </RowBetween>\n      </PaddedColumn>\n\n      <Separator />\n\n      <div style={{ flex: '1' }}>\n        <AutoSizer disableWidth>\n          {({ height }) => (\n            <CurrencyList\n              height={height}\n              showETH={!!payInput}\n              currencies={filteredSortedTokens}\n              onCurrencySelect={handleCurrencySelect}\n              otherCurrency={otherSelectedCurrency}\n              selectedCurrency={selectedCurrency}\n              fixedListRef={fixedList}\n            />\n          )}\n        </AutoSizer>\n      </div>\n\n      {/* <Separator />\n      <Card>\n        <RowBetween>\n          {selectedListInfo.current ? (\n            <Row>\n              {selectedListInfo.current.logoURI ? (\n                <ListLogo\n                  style={{ marginRight: 12 }}\n                  logoURI={selectedListInfo.current.logoURI}\n                  alt={`${selectedListInfo.current.name} list logo`}\n                />\n              ) : null}\n              <TYPE.main id=\"currency-search-selected-list-name\">{selectedListInfo.current.name}</TYPE.main>\n            </Row>\n          ) : null}\n          <LinkStyledButton\n            style={{ fontWeight: 500, color: theme.text2, fontSize: 16 }}\n            onClick={onChangeList}\n            id=\"currency-search-change-list-button\"\n          >\n            {selectedListInfo.current ? 'Change' : 'Select a list'}\n          </LinkStyledButton>\n        </RowBetween>\n      </Card> */}\n    </Column>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}