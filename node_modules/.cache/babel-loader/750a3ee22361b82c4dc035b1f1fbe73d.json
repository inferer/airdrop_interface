{"ast":null,"code":"import _objectSpread from\"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";// @ts-ignore\nimport axios from'axios/dist/axios';import{API_ROOT}from'../constants';var instance=axios.create({baseURL:API_ROOT,timeout:60000});var getHeaders=function getHeaders(){// instance.defaults.headers.common['access_sign'] = access_sign == 'null' || !access_sign ? '' : access_sign\n// instance.defaults.headers.common['user_addr'] = user_addr\n// instance.defaults.headers.common['content'] = nowallet_content\nreturn{};};var processResult=function processResult(res,url){return res;};export function fetcher(url){var data=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};var formatData=_objectSpread({},data);getHeaders();return instance.get(url,{params:formatData}).then(function(res){return processResult(res.data,url);});}export function fetcherServerSide(url,data){var formatData=_objectSpread({},data);return instance.get(url,{params:formatData}).then(function(res){return res.data;});}export function poster(url,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var formatData=_objectSpread({},data);getHeaders();return instance.post(url,formatData,_objectSpread({},options)).then(function(res){return processResult(res.data);});}export function deleter(url,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};getHeaders();return instance.delete(url,data).then(function(res){return processResult(res.data);});}export function updater(url,data){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};getHeaders();return instance.put(url,data).then(function(res){return processResult(res.data);});}export function uploader(url,data){return instance.post(url,data,{headers:_objectSpread({'Content-type':'multipart/form-data',\"type\":\"formData\"},getHeaders())}).then(function(res){return processResult(res.data);}).catch(function(e){return false;});}export default instance;","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/utils/axios.ts"],"names":["axios","API_ROOT","instance","create","baseURL","timeout","getHeaders","processResult","res","url","fetcher","data","formatData","get","params","then","fetcherServerSide","poster","options","post","deleter","delete","updater","put","uploader","headers","catch","e"],"mappings":"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","sourcesContent":["// @ts-ignore\nimport axios from 'axios/dist/axios'\nimport { API_ROOT } from '../constants'\n\nconst instance = axios.create({\n  baseURL: API_ROOT,\n  timeout: 60000,\n});\n\nconst getHeaders = () => {\n  \n  // instance.defaults.headers.common['access_sign'] = access_sign == 'null' || !access_sign ? '' : access_sign\n  // instance.defaults.headers.common['user_addr'] = user_addr\n  // instance.defaults.headers.common['content'] = nowallet_content\n\n  return {\n    \n  }\n}\n\nconst processResult = (res: any, url?: string) => {\n  \n  return res\n}\n\nexport function fetcher(url: string, data: any = {}) {\n  let formatData = { ...data }\n  getHeaders()\n  return instance.get(url, { params: formatData }).then((res: { data: any; }) => processResult(res.data, url))\n}\n\nexport function fetcherServerSide(url: string, data: any) {\n  let formatData = { ...data }\n\n  return instance.get(url, { params: formatData }).then((res: { data: any; }) => res.data)\n}\n\nexport function poster(url: string, data: any, options = {}) {\n  let formatData = { ...data }\n\n  getHeaders()\n  return instance.post(url, formatData, { ...options }).then((res: { data: any; }) => processResult(res.data))\n}\n\nexport function deleter(url: string, data: any, options = {}) {\n  getHeaders()\n  return instance.delete(url, data).then((res: { data: any; }) => processResult(res.data))\n}\n\nexport function updater(url: string, data: any, options = {}) {\n  getHeaders()\n  return instance.put(url, data).then((res: { data: any; }) => processResult(res.data))\n}\n\nexport function uploader(url: string, data: any) {\n  return instance.post(\n    url,\n    data,\n    {\n      headers: {\n        'Content-type': 'multipart/form-data', \n        \"type\": \"formData\",\n        ...getHeaders()\n      }\n    })\n    .then((res: { data: any; }) => processResult(res.data))\n    .catch((e: any) => {\n      return false\n    })\n}\n\nexport default instance"]},"metadata":{},"sourceType":"module"}