{"ast":null,"code":"import { nanoid } from '@reduxjs/toolkit';\nimport { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchTokenList } from '../state/lists/actions';\nimport { getTokenListLocal } from '../utils/getTokenList';\nimport { useActiveWeb3React } from './index';\nexport function useFetchListCallback() {\n  const {\n    chainId,\n    library\n  } = useActiveWeb3React();\n  const dispatch = useDispatch();\n  return useCallback(async listUrl => {\n    const requestId = nanoid();\n    dispatch(fetchTokenList.pending({\n      requestId,\n      url: listUrl\n    }));\n    return getTokenListLocal(listUrl).then(tokenList => {\n      console.log(tokenList, 1111111111);\n      dispatch(fetchTokenList.fulfilled({\n        url: listUrl,\n        tokenList,\n        requestId\n      }));\n      return tokenList;\n    }).catch(error => {\n      console.debug(`Failed to get list at url ${listUrl}`, error);\n      dispatch(fetchTokenList.rejected({\n        url: listUrl,\n        requestId,\n        errorMessage: error.message\n      }));\n      throw error;\n    });\n  }, [dispatch]);\n}","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/hooks/useFetchListCallback.ts"],"names":["nanoid","useCallback","useDispatch","fetchTokenList","getTokenListLocal","useActiveWeb3React","useFetchListCallback","chainId","library","dispatch","listUrl","requestId","pending","url","then","tokenList","console","log","fulfilled","catch","error","debug","rejected","errorMessage","message"],"mappings":"AAAA,SAASA,MAAT,QAAuB,kBAAvB;AAGA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AAEA,SAASC,cAAT,QAA+B,wBAA/B;AACA,SAAuBC,iBAAvB,QAAgD,uBAAhD;AACA,SAASC,kBAAT,QAAmC,SAAnC;AAGA,OAAO,SAASC,oBAAT,GAAyE;AAC9E,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA;AAAX,MAAuBH,kBAAkB,EAA/C;AACA,QAAMI,QAAQ,GAAGP,WAAW,EAA5B;AAEA,SAAOD,WAAW,CAChB,MAAOS,OAAP,IAA2B;AACzB,UAAMC,SAAS,GAAGX,MAAM,EAAxB;AACAS,IAAAA,QAAQ,CAACN,cAAc,CAACS,OAAf,CAAuB;AAAED,MAAAA,SAAF;AAAaE,MAAAA,GAAG,EAAEH;AAAlB,KAAvB,CAAD,CAAR;AACA,WAAON,iBAAiB,CAACM,OAAD,CAAjB,CACJI,IADI,CACCC,SAAS,IAAI;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ,EAAuB,UAAvB;AACAN,MAAAA,QAAQ,CAACN,cAAc,CAACe,SAAf,CAAyB;AAAEL,QAAAA,GAAG,EAAEH,OAAP;AAAgBK,QAAAA,SAAhB;AAA2BJ,QAAAA;AAA3B,OAAzB,CAAD,CAAR;AACA,aAAOI,SAAP;AACD,KALI,EAMJI,KANI,CAMEC,KAAK,IAAI;AACdJ,MAAAA,OAAO,CAACK,KAAR,CAAe,6BAA4BX,OAAQ,EAAnD,EAAsDU,KAAtD;AACAX,MAAAA,QAAQ,CAACN,cAAc,CAACmB,QAAf,CAAwB;AAAET,QAAAA,GAAG,EAAEH,OAAP;AAAgBC,QAAAA,SAAhB;AAA2BY,QAAAA,YAAY,EAAEH,KAAK,CAACI;AAA/C,OAAxB,CAAD,CAAR;AACA,YAAMJ,KAAN;AACD,KAVI,CAAP;AAWD,GAfe,EAgBhB,CAACX,QAAD,CAhBgB,CAAlB;AAkBD","sourcesContent":["import { nanoid } from '@reduxjs/toolkit'\nimport { ChainId } from '@uniswap/sdk'\nimport { TokenList } from '@uniswap/token-lists'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { AppDispatch } from '../state'\nimport { fetchTokenList } from '../state/lists/actions'\nimport getTokenList, { getTokenListLocal } from '../utils/getTokenList'\nimport { useActiveWeb3React } from './index'\n\n\nexport function useFetchListCallback(): (listUrl: string) => Promise<TokenList> {\n  const { chainId, library } = useActiveWeb3React()\n  const dispatch = useDispatch<AppDispatch>()\n\n  return useCallback(\n    async (listUrl: string) => {\n      const requestId = nanoid()\n      dispatch(fetchTokenList.pending({ requestId, url: listUrl }))\n      return getTokenListLocal(listUrl)\n        .then(tokenList => {\n          console.log(tokenList, 1111111111)\n          dispatch(fetchTokenList.fulfilled({ url: listUrl, tokenList, requestId }))\n          return tokenList\n        })\n        .catch(error => {\n          console.debug(`Failed to get list at url ${listUrl}`, error)\n          dispatch(fetchTokenList.rejected({ url: listUrl, requestId, errorMessage: error.message }))\n          throw error\n        })\n    },\n    [dispatch]\n  )\n}\n"]},"metadata":{},"sourceType":"module"}