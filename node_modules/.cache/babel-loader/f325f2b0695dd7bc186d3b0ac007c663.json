{"ast":null,"code":"var _jsxFileName = \"/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/Header/VersionSwitch.tsx\";\nimport React, { useCallback } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { MouseoverTooltip } from '../Tooltip';\nimport { useUserRoleMode } from '../../state/user/hooks';\nimport { UserRoleMode } from '../../constants';\nconst VersionLabel = styled.span`\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({\n  theme,\n  enabled\n}) => enabled ? theme.primary1 : 'none'};\n  color: ${({\n  theme,\n  enabled\n}) => enabled ? theme.white : theme.text1};\n  font-size: 1rem;\n  font-weight: ${({\n  enabled\n}) => enabled ? '500' : '400'};\n  :hover {\n    user-select: ${({\n  enabled\n}) => enabled ? 'none' : 'initial'};\n    background: ${({\n  theme,\n  enabled\n}) => enabled ? theme.primary1 : 'none'};\n    color: ${({\n  theme,\n  enabled\n}) => enabled ? theme.white : theme.text1};\n  }\n`;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst VersionToggle = styled.div`\n  border-radius: 12px;\n  opacity: ${({\n  enabled\n}) => enabled ? 1 : 0.5};\n  cursor: ${({\n  enabled\n}) => enabled ? 'pointer' : 'default'};\n  background: ${({\n  theme\n}) => theme.bg3};\n  color: ${({\n  theme\n}) => theme.primary1};\n  display: flex;\n  width: fit-content;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover {\n    text-decoration: none;\n  }\n`;\nconst VersionToggleWap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  padding-right: 100px;\n`;\nexport default function VersionSwitch() {\n  const [userRoleMode, toggleSetUserRoleMode] = useUserRoleMode();\n  const location = useLocation();\n  const versionSwitchAvailable = location.pathname === '/swap' || location.pathname === '/send';\n  const handleClick = useCallback(e => {\n    if (!versionSwitchAvailable) e.preventDefault();\n    toggleSetUserRoleMode();\n  }, [versionSwitchAvailable, toggleSetUserRoleMode]);\n  const toggle = /*#__PURE__*/React.createElement(VersionToggleWap, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(VersionToggle, {\n    enabled: versionSwitchAvailable,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VersionLabel, {\n    enabled: userRoleMode === UserRoleMode.PROJECT || !versionSwitchAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Project\"), /*#__PURE__*/React.createElement(VersionLabel, {\n    enabled: userRoleMode === UserRoleMode.USER && versionSwitchAvailable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, \"User\")));\n  return versionSwitchAvailable ? toggle : /*#__PURE__*/React.createElement(MouseoverTooltip, {\n    text: \"This page is only compatible with Uniswap V2.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }\n  }, toggle);\n}","map":{"version":3,"sources":["/Users/xuyanjun/workspace/vision/airdrop_protocol/airdrop_interface/src/components/Header/VersionSwitch.tsx"],"names":["React","useCallback","useLocation","styled","MouseoverTooltip","useUserRoleMode","UserRoleMode","VersionLabel","span","theme","enabled","primary1","white","text1","VersionToggle","div","bg3","VersionToggleWap","VersionSwitch","userRoleMode","toggleSetUserRoleMode","location","versionSwitchAvailable","pathname","handleClick","e","preventDefault","toggle","PROJECT","USER"],"mappings":"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","sourcesContent":["import { stringify } from 'qs'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Link, useLocation } from 'react-router-dom'\nimport styled from 'styled-components'\nimport useParsedQueryString from '../../hooks/useParsedQueryString'\nimport useToggledVersion, { Version } from '../../hooks/useToggledVersion'\nimport { MouseoverTooltip } from '../Tooltip'\nimport { useUserRoleMode } from '../../state/user/hooks'\nimport { UserRoleMode } from '../../constants'\n\nconst VersionLabel = styled.span<{ enabled: boolean }>`\n  padding: 0.35rem 0.6rem;\n  border-radius: 12px;\n  background: ${({ theme, enabled }) => (enabled ? theme.primary1 : 'none')};\n  color: ${({ theme, enabled }) => (enabled ? theme.white : theme.text1)};\n  font-size: 1rem;\n  font-weight: ${({ enabled }) => (enabled ? '500' : '400')};\n  :hover {\n    user-select: ${({ enabled }) => (enabled ? 'none' : 'initial')};\n    background: ${({ theme, enabled }) => (enabled ? theme.primary1 : 'none')};\n    color: ${({ theme, enabled }) => (enabled ? theme.white : theme.text1)};\n  }\n`\n\ninterface VersionToggleProps extends React.ComponentProps<typeof Link> {\n  enabled: boolean\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst VersionToggle = styled.div<{ enabled: boolean }>`\n  border-radius: 12px;\n  opacity: ${({ enabled }) => (enabled ? 1 : 0.5)};\n  cursor: ${({ enabled }) => (enabled ? 'pointer' : 'default')};\n  background: ${({ theme }) => theme.bg3};\n  color: ${({ theme }) => theme.primary1};\n  display: flex;\n  width: fit-content;\n  margin-left: 0.5rem;\n  text-decoration: none;\n  :hover {\n    text-decoration: none;\n  }\n`\n\nconst VersionToggleWap = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  width: 100%;\n  padding-right: 100px;\n`\n\nexport default function VersionSwitch() {\n  const [ userRoleMode, toggleSetUserRoleMode] = useUserRoleMode()\n\n  const location = useLocation()\n  const versionSwitchAvailable = location.pathname === '/swap' || location.pathname === '/send'\n\n  const handleClick = useCallback(\n    e => {\n      if (!versionSwitchAvailable) e.preventDefault()\n      toggleSetUserRoleMode()\n    },\n    [versionSwitchAvailable, toggleSetUserRoleMode]\n  )\n\n  const toggle = (\n    <VersionToggleWap>\n      <VersionToggle enabled={versionSwitchAvailable} onClick={handleClick}>\n        <VersionLabel enabled={userRoleMode === UserRoleMode.PROJECT || !versionSwitchAvailable}>Project</VersionLabel>\n        <VersionLabel enabled={userRoleMode === UserRoleMode.USER && versionSwitchAvailable}>User</VersionLabel>\n      </VersionToggle>\n    </VersionToggleWap>\n  )\n  return versionSwitchAvailable ? (\n    toggle\n  ) : (\n    <MouseoverTooltip text=\"This page is only compatible with Uniswap V2.\">{toggle}</MouseoverTooltip>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}